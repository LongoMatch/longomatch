# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/longomatch.in $(top_srcdir)/Makefile.include
subdir = LongoMatch
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/expansions.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = longomatch
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(commonapplicationdatarootimagesdir)" \
	"$(DESTDIR)$(commonapplicationdatarootlogodir)" \
	"$(DESTDIR)$(linuxdesktopapplicationsdir)" \
	"$(DESTDIR)$(programfilesdir)"
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
pkglibSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS) $(pkglib_SCRIPTS)
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
commonapplicationdatarootimagesDATA_INSTALL = $(INSTALL_DATA)
commonapplicationdatarootlogoDATA_INSTALL = $(INSTALL_DATA)
linuxdesktopapplicationsDATA_INSTALL = $(INSTALL_DATA)
programfilesDATA_INSTALL = $(INSTALL_DATA)
DATA = $(commonapplicationdatarootimages_DATA) \
	$(commonapplicationdatarootlogo_DATA) \
	$(linuxdesktopapplications_DATA) $(programfiles_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CESARPLAYER_CFLAGS = @CESARPLAYER_CFLAGS@
CESARPLAYER_LIBS = @CESARPLAYER_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DB4O_60_CFLAGS = @DB4O_60_CFLAGS@
DB4O_60_LIBS = @DB4O_60_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLIB_SHARP_20_CFLAGS = @GLIB_SHARP_20_CFLAGS@
GLIB_SHARP_20_LIBS = @GLIB_SHARP_20_LIBS@
GMCS = @GMCS@
GREP = @GREP@
GTK_SHARP_20_CFLAGS = @GTK_SHARP_20_CFLAGS@
GTK_SHARP_20_LIBS = @GTK_SHARP_20_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MCS = @MCS@
MCS2 = @MCS2@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
expanded_bindir = @expanded_bindir@
expanded_datadir = @expanded_datadir@
expanded_libdir = @expanded_libdir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = $(build_sources) $(build_resx_files) \
	$(build_others_files) $(ASSEMBLY_WRAPPER_IN) $(EXTRAS) \
	$(DATA_FILES) $(build_culture_res_files)

# Warning: This is an automatically generated file, do not edit!
@ENABLE_DEBUG_TRUE@ASSEMBLY_COMPILER_COMMAND = $(GMCS)
@ENABLE_RELEASE_TRUE@ASSEMBLY_COMPILER_COMMAND = $(GMCS)
@ENABLE_DEBUG_TRUE@ASSEMBLY_COMPILER_FLAGS = -noconfig -codepage:utf8 -warn:4 -optimize+ -debug -define:DEBUG "-main:LongoMatch.MainClass"
@ENABLE_RELEASE_TRUE@ASSEMBLY_COMPILER_FLAGS = -noconfig -codepage:utf8 -warn:4 -optimize+ "-main:LongoMatch.MainClass"
@ENABLE_DEBUG_TRUE@ASSEMBLY = bin/Debug/LongoMatch.exe
@ENABLE_RELEASE_TRUE@ASSEMBLY = bin/Release/LongoMatch.exe
@ENABLE_DEBUG_TRUE@ASSEMBLY_MDB = $(ASSEMBLY).mdb
@ENABLE_RELEASE_TRUE@ASSEMBLY_MDB = $(ASSEMBLY).mdb
@ENABLE_DEBUG_TRUE@COMPILE_TARGET = exe
@ENABLE_RELEASE_TRUE@COMPILE_TARGET = exe
@ENABLE_DEBUG_TRUE@PROJECT_REFERENCES = \
@ENABLE_DEBUG_TRUE@	../CesarPlayer/bin/Debug/CesarPlayer.dll

@ENABLE_RELEASE_TRUE@PROJECT_REFERENCES = \
@ENABLE_RELEASE_TRUE@	../CesarPlayer/bin/Release/CesarPlayer.dll

@ENABLE_DEBUG_TRUE@BUILD_DIR = bin/Debug
@ENABLE_RELEASE_TRUE@BUILD_DIR = bin/Release
@ENABLE_DEBUG_TRUE@CESARPLAYER_DLL_SOURCE = ../CesarPlayer/bin/Debug/CesarPlayer.dll
@ENABLE_RELEASE_TRUE@CESARPLAYER_DLL_SOURCE = ../CesarPlayer/bin/Release/CesarPlayer.dll
@ENABLE_DEBUG_TRUE@CESARPLAYER_DLL = $(BUILD_DIR)/CesarPlayer.dll
@ENABLE_RELEASE_TRUE@CESARPLAYER_DLL = $(BUILD_DIR)/CesarPlayer.dll
@ENABLE_DEBUG_TRUE@CESARPLAYER_DLL_MDB_SOURCE = ../CesarPlayer/bin/Debug/CesarPlayer.dll.mdb
@ENABLE_RELEASE_TRUE@CESARPLAYER_DLL_MDB_SOURCE = 
@ENABLE_DEBUG_TRUE@CESARPLAYER_DLL_MDB = $(BUILD_DIR)/CesarPlayer.dll.mdb
@ENABLE_RELEASE_TRUE@CESARPLAYER_DLL_MDB = 
@ENABLE_DEBUG_TRUE@LONGOMATCH_PNG_SOURCE = images/longomatch.png
@ENABLE_RELEASE_TRUE@LONGOMATCH_PNG_SOURCE = images/longomatch.png
@ENABLE_DEBUG_TRUE@LONGOMATCH_EXE_MDB_SOURCE = bin/Debug/LongoMatch.exe.mdb
@ENABLE_RELEASE_TRUE@LONGOMATCH_EXE_MDB_SOURCE = 
@ENABLE_DEBUG_TRUE@LONGOMATCH_EXE_MDB = $(BUILD_DIR)/LongoMatch.exe.mdb
@ENABLE_RELEASE_TRUE@LONGOMATCH_EXE_MDB = 
@ENABLE_DEBUG_TRUE@LONGOMATCH_DESKTOP_SOURCE = longomatch.desktop
@ENABLE_RELEASE_TRUE@LONGOMATCH_DESKTOP_SOURCE = longomatch.desktop
@ENABLE_DEBUG_TRUE@BACKGROUND_PNG_SOURCE = images/background.png
@ENABLE_RELEASE_TRUE@BACKGROUND_PNG_SOURCE = images/background.png
@ENABLE_RELEASE_TRUE@LONGOMATCH_LOGO_SOURCE = images/logo_48x48.png
AL = al2
SATELLITE_ASSEMBLY_NAME = $(notdir $(basename $(ASSEMBLY))).resources.dll
COMMONAPPLICATIONDATAROOT_IMAGES = \
	$(LONGOMATCH_PNG) \
	$(BACKGROUND_PNG)  

COMMONAPPLICATIONDATAROOT_LOGO = \
	$(LONGOMATCH_LOGO)

PROGRAMFILES = \
	$(CESARPLAYER_DLL) \
	$(LONGOMATCH_EXE_MDB) \
	$(CESARPLAYER_DLL_MDB) 

LINUX_DESKTOPAPPLICATIONS = \
	$(LONGOMATCH_DESKTOP)  

BINARIES = \
	$(LONGOMATCH)  

RESGEN = resgen2
FILES = \
	gtk-gui/generated.cs \
	AssemblyInfo.cs \
	Main.cs \
	Gui/ButtonsWidget.cs \
	Gui/CalendarPopup.cs \
	Gui/DBManager.cs \
	Gui/ProjectListWidget.cs \
	Gui/FileDescriptionWidget.cs \
	Gui/FramesCaptureProgressDialog.cs \
	Gui/EntryDialog.cs \
	Gui/MainWindow.cs \
	Gui/MessagePopup.cs \
	Gui/Migrator.cs\
	Gui/NewProjectDialog.cs \
	Gui/NotesWidget.cs \
	Gui/OpenProjectDialog.cs \
	Gui/PlayerProperties.cs \
	Gui/PlayersListTreeWidget.cs \
	Gui/PlayersSelectionDialog.cs \
	Gui/PlayersTreeView.cs \
	Gui/PlayListTreeView.cs \
	Gui/PlayListWidget.cs \
	Gui/SectionsPropertiesWidget.cs \
	Gui/SnapshotsDialog.cs \
	Gui/TeamTemplateEditor.cs \
	Gui/TeamTemplateWidget.cs \
	Gui/TemplatesEditor.cs \
	Gui/TemplateEditorDialog.cs \
	Gui/TimeAdjustWidget.cs \
	Gui/TimeNodesTreeView.cs \
	Gui/TreeWidget.cs \
	Gui/TimeNodeProperties.cs \
	Gui/TimeLineWidget.cs \
	Gui/TimeReferenceWidget.cs \
	Gui/TimeScale.cs \
	Gui/VideoEditionProperties.cs \
	Gui/UpdateDialog.cs \
	Gui/HotKeySelectorDialog.cs \
	Gui/Win32CalendarDialog.cs\
	Gui/WorkspaceChooser.cs \
	DB/Project.cs \
	DB/Sections.cs \
	DB/DataBase.cs \
	Handlers/Handlers.cs \
	IO/SectionsWriter.cs \
	IO/SectionsReader.cs \
	IO/XMLReader.cs \
	Time/MediaTimeNode.cs \
	Time/PixbufTimeNode.cs \
	Time/SectionsTimeNode.cs \
	Time/TimeNode.cs \
	Time/Time.cs \
	Time/PlayListTimeNode.cs \
	gtk-gui/LongoMatch.Gui.Component.FileDescriptionWidget.cs \
	gtk-gui/LongoMatch.Gui.Component.ProjectListWidget.cs \
	gtk-gui/LongoMatch.Gui.Component.TreeWidget.cs \
	gtk-gui/LongoMatch.Gui.Popup.CalendarPopup.cs \
	gtk-gui/LongoMatch.Gui.Component.ButtonsWidget.cs \
	gtk-gui/LongoMatch.Gui.Dialog.DBManager.cs \
	gtk-gui/LongoMatch.Gui.Dialog.OpenProjectDialog.cs \
	gtk-gui/LongoMatch.Gui.Dialog.NewProjectDialog.cs \
	gtk-gui/LongoMatch.Gui.Component.TimeAdjustWidget.cs \
	gtk-gui/LongoMatch.Gui.Component.SectionsPropertiesWidget.cs \
	gtk-gui/LongoMatch.Gui.Component.TimeNodeProperties.cs \
	gtk-gui/LongoMatch.Gui.Dialog.TemplateEditorDialog.cs \
	gtk-gui/LongoMatch.Gui.Component.PlayListWidget.cs \
	gtk-gui/LongoMatch.Gui.Component.TimeLineWidget.cs \
	gtk-gui/LongoMatch.Gui.Dialog.VideoEditionProperties.cs \
	gtk-gui/LongoMatch.Gui.Dialog.SnapshotsDialog.cs \
	gtk-gui/LongoMatch.Gui.Component.NotesWidget.cs \
	gtk-gui/LongoMatch.Gui.MainWindow.cs \
	gtk-gui/LongoMatch.Gui.Dialog.FramesCaptureProgressDialog.cs \
	gtk-gui/LongoMatch.Gui.Dialog.Migrator.cs \
	gtk-gui/LongoMatch.Gui.Dialog.UpdateDialog.cs \
	gtk-gui/LongoMatch.Gui.Dialog.HotKeySelectorDialog.cs \
	gtk-gui/LongoMatch.Gui.Component.PlayerProperties.cs \
	gtk-gui/LongoMatch.Gui.Component.TeamTemplateWidget.cs \
	gtk-gui/LongoMatch.Gui.Dialog.TeamTemplateEditor.cs \
	gtk-gui/LongoMatch.Gui.Dialog.TemplatesManager.cs \
	gtk-gui/LongoMatch.Gui.Component.PlayersListTreeWidget.cs \
	gtk-gui/LongoMatch.Gui.Dialog.WorkspaceChooser.cs \
	gtk-gui/LongoMatch.Gui.Dialog.PlayersSelectionDialog.cs \
	gtk-gui/LongoMatch.Gui.Dialog.EntryDialog.cs \
	gtk-gui/LongoMatch.Gui.Dialog.Win32CalendarDialog.cs \
	Playlist/IPlayList.cs \
	Playlist/PlayList.cs \
	Updates/Updater.cs \
	Updates/XmlUpdateParser.cs \
	IO/CSVExport.cs \
	Time/HotKey.cs \
	Handlers/EventsManager.cs \
	Handlers/HotKeysManager.cs \
	DB/TeamTemplate.cs \
	Time/Player.cs \
	Compat/0.0/DB/DataBase.cs \
	Compat/0.0/DB/MediaFile.cs \
	Compat/0.0/DB/Project.cs \
	Compat/0.0/DB/Sections.cs \
	Compat/0.0/IO/SectionsReader.cs\
	Compat/0.0/Time/MediaTimeNode.cs \
	Compat/0.0/Time/PixbufTimeNode.cs \
	Compat/0.0/Time/PlayListTimeNode.cs \
	Compat/0.0/Time/SectionsTimeNode.cs \
	Compat/0.0/Time/Time.cs \
	Compat/0.0/Time/TimeNode.cs \
	Compat/0.0/Playlist/IPlayList.cs \
	Compat/0.0/Playlist/PlayList.cs \
	Compat/0.0/DatabaseMigrator.cs \
	Compat/0.0/PlayListMigrator.cs\
	Compat/0.0/TemplatesMigrator.cs 

DATA_FILES = 
RESOURCES = \
	gtk-gui/objects.xml \
	gtk-gui/gui.stetic 

EXTRAS = \
	images/longomatch.png\
	images/background.png\
	images/logo_48x48.png \
	longomatch.desktop\
	longomatch.in 

REFERENCES = \
	Mono.Posix \
	System.Xml \
	$(GTK_SHARP_20_LIBS) \
	$(GLIB_SHARP_20_LIBS) \
	Mono.Cairo \
	System \
	$(DB4O_60_LIBS)

DLL_REFERENCES = 
CLEANFILES = $(COMMONAPPLICATIONDATAROOT_IMAGES) \
	$(COMMONAPPLICATIONDATAROOT_LOGO) $(PROGRAMFILES) \
	$(LINUX_DESKTOPAPPLICATIONS) $(BINARIES) $(ASSEMBLY) \
	$(ASSEMBLY).mdb $(BINARIES) $(build_resx_resources) \
	$(build_satellite_assembly_list)
VALID_CULTURES = ar bg ca zh-CHS cs da de el en es fi fr he hu is it ja ko nl no pl pt ro ru hr sk sq sv th tr id uk be sl et lv lt fa vi hy eu mk af fo hi sw gu ta te kn mr gl kok ar-SA bg-BG ca-ES zh-TW cs-CZ da-DK de-DE el-GR en-US fi-FI fr-FR he-IL hu-HU is-IS it-IT ja-JP ko-KR nl-NL nb-NO pl-PL pt-BR ro-RO ru-RU hr-HR sk-SK sq-AL sv-SE th-TH tr-TR id-ID uk-UA be-BY sl-SI et-EE lv-LV lt-LT fa-IR vi-VN hy-AM eu-ES mk-MK af-ZA fo-FO hi-IN sw-KE gu-IN ta-IN te-IN kn-IN mr-IN gl-ES kok-IN ar-IQ zh-CN de-CH en-GB es-MX fr-BE it-CH nl-BE nn-NO pt-PT sv-FI ar-EG zh-HK de-AT en-AU es-ES fr-CA ar-LY zh-SG de-LU en-CA es-GT fr-CH ar-DZ zh-MO en-NZ es-CR fr-LU ar-MA en-IE es-PA ar-TN en-ZA es-DO ar-OM es-VE ar-YE es-CO ar-SY es-PE ar-JO es-AR ar-LB en-ZW es-EC ar-KW en-PH es-CL ar-AE es-UY ar-BH es-PY ar-QA es-BO es-SV es-HN es-NI es-PR zh-CHT
s2q = $(subst \ ,?,$1)
q2s = $(subst ?,\ ,$1)
# use this when result will be quoted
unesc2 = $(subst ?, ,$1)
build_sources = $(FILES) $(GENERATED_FILES)
build_sources_esc = $(call s2q,$(build_sources))
# use unesc2, as build_sources_embed is quoted
build_sources_embed = $(call unesc2,$(build_sources_esc:%='$(srcdir)/%'))
comma__ = ,
get_resource_name = $(firstword $(subst $(comma__), ,$1))
get_culture = $(lastword $(subst ., ,$(basename $1)))
is_cultured_resource = $(and $(word 3,$(subst ., ,$1)), $(filter $(VALID_CULTURES),$(lastword $(subst ., ,$(basename $1)))))
RESOURCES_ESC = $(call s2q,$(RESOURCES))
build_resx_list = $(foreach res, $(RESOURCES_ESC), $(if $(filter %.resx, $(call get_resource_name,$(res))),$(res),))
build_non_culture_resx_list = $(foreach res, $(build_resx_list),$(if $(call is_cultured_resource,$(call get_resource_name,$(res))),,$(res)))
build_non_culture_others_list = $(foreach res, $(filter-out $(build_resx_list),$(RESOURCES_ESC)),$(if $(call is_cultured_resource,$(call get_resource_name,$(res))),,$(res)))
build_others_list = $(build_non_culture_others_list)
build_xamlg_list = $(filter %.xaml.g.cs, $(FILES))

# resgen all .resx resources
build_resx_files = $(foreach res, $(build_resx_list), $(call get_resource_name,$(res)))
build_resx_resources_esc = $(build_resx_files:.resx=.resources)
build_resx_resources = $(call q2s,$(build_resx_resources_esc))

# embed resources for the main assembly
build_resx_resources_hack = $(subst .resx,.resources, $(build_non_culture_resx_list))
# use unesc2, as build_resx_resources_embed is quoted
build_resx_resources_embed = $(call unesc2,$(build_resx_resources_hack:%='-resource:%'))
build_others_files = $(call q2s,$(foreach res, $(build_others_list),$(call get_resource_name,$(res))))
build_others_resources = $(build_others_files)
# use unesc2, as build_others_resources_embed is quoted
build_others_resources_embed = $(call unesc2,$(build_others_list:%='-resource:$(srcdir)/%'))
build_resources = $(build_resx_resources) $(build_others_resources)
build_resources_embed = $(build_resx_resources_embed) $(build_others_resources_embed)

# -usesourcepath is available only for resgen2
emit_resgen_target_1 = $(call q2s,$1) : $(call q2s,$(subst .resources,.resx,$1)); cd '$$(shell dirname '$$<')' && MONO_IOMAP=drive $$(RESGEN) '$$(shell basename '$$<')' '$$(shell basename '$$@')'
emit_resgen_target_2 = $(call q2s,$1) : $(call q2s,$(subst .resources,.resx,$1)); MONO_IOMAP=drive $$(RESGEN) -usesourcepath '$$<' '$$@'
emit_resgen_target = $(if $(filter resgen2,$(RESGEN)),$(emit_resgen_target_2),$(emit_resgen_target_1))
emit_resgen_targets = $(foreach res,$(build_resx_resources_esc),$(eval $(call emit_resgen_target,$(res))))
build_references_ref = $(call q2s,$(foreach ref, $(call \
	s2q,$(REFERENCES)), $(if $(filter -pkg:%, $(ref)), $(ref), \
	$(if $(filter -r:%, $(ref)), $(ref), -r:$(ref))))) $(call \
	q2s,$(foreach ref, $(call s2q,$(DLL_REFERENCES)), -r:$(ref))) \
	$(call q2s,$(foreach ref, $(call s2q,$(PROJECT_REFERENCES)), \
	-r:$(ref)))
s2q2s = $(call unesc2,$(call s2q,$1))
cp_actual = test -z $1 || cp $1 $2
cp = $(call cp_actual,'$(call s2q2s,$1)','$(call s2q2s,$2)')
rm_actual = test -z '$1' || rm -f '$2'
rm = $(call rm_actual,$(call s2q2s,$1),$(call s2q2s,$2)/$(shell basename '$(call s2q2s,$1)'))
DISTCLEANFILES = $(GENERATED_FILES) $(pc_files) $(BUILD_DIR)/*
pkglib_SCRIPTS = $(ASSEMBLY)
bin_SCRIPTS = $(BINARIES)
linuxdesktopapplicationsdir = @datadir@/applications
linuxdesktopapplications_DATA = $(LINUX_DESKTOPAPPLICATIONS)
programfilesdir = @libdir@/@PACKAGE@
programfiles_DATA = $(PROGRAMFILES)
commonapplicationdatarootimagesdir = @datadir@/@PACKAGE@/images
commonapplicationdatarootimages_DATA = $(COMMONAPPLICATIONDATAROOT_IMAGES)
commonapplicationdatarootlogodir = @datadir@/icons/hicolor/48x48/apps
commonapplicationdatarootlogo_DATA = $(COMMONAPPLICATIONDATAROOT_LOGO)

# generating satellite assemblies
culture_resources = $(foreach res, $(RESOURCES_ESC), $(if $(call is_cultured_resource,$(call get_resource_name, $(res))),$(res)))
cultures = $(sort $(foreach res, $(culture_resources), $(call get_culture,$(call get_resource_name,$(res)))))
culture_resource_dependencies = $(call q2s,$(BUILD_DIR)/$1/$(SATELLITE_ASSEMBLY_NAME): $(subst .resx,.resources,$2))
culture_resource_commandlines = $(call unesc2,cmd_line_satellite_$1 += '/embed:$(subst .resx,.resources,$2)')
build_satellite_assembly_list = $(call q2s,$(cultures:%=$(BUILD_DIR)/%/$(SATELLITE_ASSEMBLY_NAME)))
build_culture_res_files = $(call q2s,$(foreach res, $(culture_resources),$(call get_resource_name,$(res))))
install_satellite_assembly_list = $(subst $(BUILD_DIR),$(DESTDIR)$(libdir)/$(PACKAGE),$(build_satellite_assembly_list))
LONGOMATCH_PNG = $(BUILD_DIR)/images/longomatch.png
LONGOMATCH_LOGO = $(BUILD_DIR)/icons/hicolor/48x48/apps/longomatch.png
LONGOMATCH = $(BUILD_DIR)/longomatch
LONGOMATCH_DESKTOP = $(BUILD_DIR)/longomatch.desktop
BACKGROUND_PNG = $(BUILD_DIR)/images/background.png
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  LongoMatch/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  LongoMatch/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
longomatch: $(top_builddir)/config.status $(srcdir)/longomatch.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done
install-pkglibSCRIPTS: $(pkglib_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(pkglibSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(pkglibSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-commonapplicationdatarootimagesDATA: $(commonapplicationdatarootimages_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(commonapplicationdatarootimagesdir)" || $(MKDIR_P) "$(DESTDIR)$(commonapplicationdatarootimagesdir)"
	@list='$(commonapplicationdatarootimages_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(commonapplicationdatarootimagesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(commonapplicationdatarootimagesdir)/$$f'"; \
	  $(commonapplicationdatarootimagesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(commonapplicationdatarootimagesdir)/$$f"; \
	done

uninstall-commonapplicationdatarootimagesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(commonapplicationdatarootimages_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(commonapplicationdatarootimagesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(commonapplicationdatarootimagesdir)/$$f"; \
	done
install-commonapplicationdatarootlogoDATA: $(commonapplicationdatarootlogo_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(commonapplicationdatarootlogodir)" || $(MKDIR_P) "$(DESTDIR)$(commonapplicationdatarootlogodir)"
	@list='$(commonapplicationdatarootlogo_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(commonapplicationdatarootlogoDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(commonapplicationdatarootlogodir)/$$f'"; \
	  $(commonapplicationdatarootlogoDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(commonapplicationdatarootlogodir)/$$f"; \
	done

uninstall-commonapplicationdatarootlogoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(commonapplicationdatarootlogo_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(commonapplicationdatarootlogodir)/$$f'"; \
	  rm -f "$(DESTDIR)$(commonapplicationdatarootlogodir)/$$f"; \
	done
install-linuxdesktopapplicationsDATA: $(linuxdesktopapplications_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(linuxdesktopapplicationsdir)" || $(MKDIR_P) "$(DESTDIR)$(linuxdesktopapplicationsdir)"
	@list='$(linuxdesktopapplications_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(linuxdesktopapplicationsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(linuxdesktopapplicationsdir)/$$f'"; \
	  $(linuxdesktopapplicationsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(linuxdesktopapplicationsdir)/$$f"; \
	done

uninstall-linuxdesktopapplicationsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(linuxdesktopapplications_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(linuxdesktopapplicationsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(linuxdesktopapplicationsdir)/$$f"; \
	done
install-programfilesDATA: $(programfiles_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(programfilesdir)" || $(MKDIR_P) "$(DESTDIR)$(programfilesdir)"
	@list='$(programfiles_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(programfilesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(programfilesdir)/$$f'"; \
	  $(programfilesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(programfilesdir)/$$f"; \
	done

uninstall-programfilesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(programfiles_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(programfilesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(programfilesdir)/$$f"; \
	done
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(commonapplicationdatarootimagesdir)" "$(DESTDIR)$(commonapplicationdatarootlogodir)" "$(DESTDIR)$(linuxdesktopapplicationsdir)" "$(DESTDIR)$(programfilesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-commonapplicationdatarootimagesDATA \
	install-commonapplicationdatarootlogoDATA \
	install-linuxdesktopapplicationsDATA install-programfilesDATA

install-dvi: install-dvi-am

install-exec-am: install-binSCRIPTS install-pkglibSCRIPTS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS \
	uninstall-commonapplicationdatarootimagesDATA \
	uninstall-commonapplicationdatarootlogoDATA \
	uninstall-linuxdesktopapplicationsDATA uninstall-pkglibSCRIPTS \
	uninstall-programfilesDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	distclean distclean-generic distclean-libtool distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binSCRIPTS install-commonapplicationdatarootimagesDATA \
	install-commonapplicationdatarootlogoDATA install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-linuxdesktopapplicationsDATA \
	install-man install-pdf install-pdf-am install-pkglibSCRIPTS \
	install-programfilesDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	uninstall uninstall-am uninstall-binSCRIPTS \
	uninstall-commonapplicationdatarootimagesDATA \
	uninstall-commonapplicationdatarootlogoDATA \
	uninstall-linuxdesktopapplicationsDATA uninstall-pkglibSCRIPTS \
	uninstall-programfilesDATA


all: $(ASSEMBLY) $(COMMONAPPLICATIONDATAROOT_IMAGES)  $(COMMONAPPLICATIONDATAROOT_LOGO) $(PROGRAMFILES) $(LINUX_DESKTOPAPPLICATIONS) $(BINARIES) 

# macros

# $(call emit-deploy-target,deploy-variable-name)
define emit-deploy-target
$($1): $($1_SOURCE)
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
endef

# $(call emit-deploy-wrapper,wrapper-variable-name,wrapper-sourcefile,x)
# assumes that for a wrapper foo.pc its source template is foo.pc.in
# if $3 is non-empty then wrapper is marked exec
define emit-deploy-wrapper
$($1): $2 
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
	$(if $3,chmod +x '$$@')

endef

$(eval $(foreach res, $(culture_resources), $(eval $(call culture_resource_dependencies,$(call get_culture,$(call get_resource_name,$(res))),$(call get_resource_name,$(res))))))
$(eval $(foreach res, $(culture_resources), $(eval $(call culture_resource_commandlines,$(call get_culture,$(call get_resource_name,$(res))),$(res)))))

$(build_satellite_assembly_list): $(BUILD_DIR)/%/$(SATELLITE_ASSEMBLY_NAME):
	mkdir -p '$(@D)'
	$(AL) -out:'$@' -culture:$* -t:lib $(cmd_line_satellite_$*)

$(install_satellite_assembly_list):
	mkdir -p '$(@D)'
	cp $(subst $(DESTDIR)$(libdir)/$(PACKAGE), $(BUILD_DIR), $@) $@

install-satellite-assemblies: $(install_satellite_assembly_list)

uninstall-satellite-assemblies:
	rm -rf $(install_satellite_assembly_list)

$(eval $(call emit-deploy-target,CESARPLAYER_DLL))
$(eval $(call emit-deploy-target,LONGOMATCH_PNG))
$(eval $(call emit-deploy-target,LONGOMATCH_LOGO))
$(eval $(call emit-deploy-target,BACKGROUND_PNG))
$(eval $(call emit-deploy-wrapper,LONGOMATCH,longomatch,x))
$(eval $(call emit-deploy-target,LONGOMATCH_DESKTOP))
$(eval $(call emit-deploy-target,CESARPLAYER_DLL_MDB))

$(eval $(call emit_resgen_targets))
$(build_xamlg_list): %.xaml.g.cs: %.xaml
	xamlg '$<'

$(ASSEMBLY) $(ASSEMBLY_MDB): $(build_sources) $(build_resources) $(build_datafiles) $(DLL_REFERENCES) $(PROJECT_REFERENCES) $(build_xamlg_list) $(build_satellite_assembly_list)
	mkdir -p $(shell dirname $(ASSEMBLY))
	$(ASSEMBLY_COMPILER_COMMAND) $(ASSEMBLY_COMPILER_FLAGS) -out:$(ASSEMBLY) -target:$(COMPILE_TARGET) $(build_sources_embed) $(build_resources_embed) $(build_references_ref)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
